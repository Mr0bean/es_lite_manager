name: Build and Release Electron App

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            build-command: npm run dist:win:prod
            artifact-name: windows-builds
            artifact-path: |
              dist-electron/*.exe
              dist-electron/*.msi
            node-version: 20
          - os: macos-latest
            build-command: npm run dist:mac:prod
            artifact-name: macos-builds-x64
            artifact-path: |
              dist-electron/*.dmg
              dist-electron/*.zip
            node-version: 20
          - os: macos-latest
            build-command: npm run dist:mac:prod:arm64
            artifact-name: macos-builds-arm64
            artifact-path: |
              dist-electron/*.dmg
              dist-electron/*.zip
            node-version: 20
          - os: ubuntu-latest
            build-command: npm run dist:linux:prod
            artifact-name: linux-builds
            artifact-path: |
              dist-electron/*.AppImage
            node-version: 20
        
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build web application
      run: npm run build:prod

    - name: Clean dist folder
      run: node -e "const fs=require('fs'); if(fs.existsSync('dist-electron')) fs.rmSync('dist-electron', {recursive:true, force:true})"

    - name: Build Electron app
      run: ${{ matrix.build-command }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ matrix.artifact-path }}
        retention-days: 30

  android-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build web application
      run: npm run build:prod

    - name: Initialize Capacitor
      run: npm run cap:init

    - name: Add Android platform
      run: |
        if [ -d "android" ]; then
          echo "Android platform already exists, syncing..."
          npm run cap:sync
        else
          echo "Adding Android platform..."
          npm run cap:add:android
        fi

    - name: Build Android APK
      run: |
        npm run cap:sync
        cd android
        ./gradlew assembleDebug

    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-builds
        path: |
          android/app/build/outputs/apk/debug/*.apk
        retention-days: 30

  release:
    needs: [build, android-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display structure of downloaded files
      run: ls -R ./artifacts

    - name: Create Release with Assets
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: ES Manager ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## ES Manager ${{ github.ref_name }}
          
          ### 新特性 / New Features
          - 跨平台 Elasticsearch 可视化管理工具
          - 完整的索引管理和文档操作功能
          - 实时搜索和数据分析
          
          ### 支持平台 / Supported Platforms  
          - **Windows**: 64-bit (x64) - `.exe` 安装程序 / 便携版
          - **macOS**: Intel 和 Apple Silicon - `.dmg` 安装包 / `.zip` 压缩包
          - **Linux**: 64-bit (x64) - `.AppImage` 应用程序包
          - **Android**: Android 7.0+ (API 24+) - `.apk` 安装包
          
          ### 安装说明 / Installation
          - **Windows**: 下载 `.exe` 安装程序或便携版
          - **macOS**: 下载 `.dmg` 安装包双击安装
          - **Linux**: 下载 `.AppImage` 文件赋予执行权限后运行
          - **Android**: 下载 `.apk` 文件安装（需开启未知来源应用安装）
        files: |
          ./artifacts/*/*

