{
  "name": "es-manager",
  "version": "1.1.0",
  "type": "module",
  "main": "src-electron/main.js",
  "homepage": "./",
  "scripts": {
    "dev": "vite",
    "dev:staging": "vite --mode staging",
    "build": "vite build",
    "build:dev": "vite build --mode development",
    "build:staging": "vite build --mode staging",
    "build:prod": "vite build --mode production",
    "preview": "vite preview",
    "server": "node server/index.js",
    "server:dev": "cross-env NODE_ENV=development node server/index.js",
    "server:staging": "cross-env NODE_ENV=staging node server/index.js",
    "server:prod": "cross-env NODE_ENV=production node server/index.js",
    "electron": "electron .",
    "electron:dev": "concurrently \"npm run server:dev\" \"npm run dev\" \"wait-on http://localhost:9020 http://localhost:9021 && cross-env NODE_ENV=development electron .\"",
    "electron:staging": "concurrently \"npm run server:staging\" \"npm run dev:staging\" \"wait-on http://localhost:9020 http://localhost:9021 && cross-env NODE_ENV=staging electron .\"",
    "pack": "npm run build && electron-builder --dir",
    "pack:dev": "npm run build:dev && electron-builder --dir --config electron-builder.json",
    "pack:staging": "npm run build:staging && electron-builder --dir --config electron-builder.json",
    "pack:prod": "npm run build:prod && electron-builder --dir --config electron-builder.json",
    "dist": "npm run build:prod && electron-builder --publish=never",
    "dist:dev": "npm run build:dev && cross-env NODE_ENV=development electron-builder --publish=never",
    "dist:staging": "npm run build:staging && cross-env NODE_ENV=staging electron-builder --publish=never",
    "dist:prod": "npm run build:prod && cross-env NODE_ENV=production electron-builder --publish=never",
    "dist:mac": "npm run build:prod && electron-builder --mac --publish=never",
    "dist:mac:dev": "npm run build:dev && cross-env NODE_ENV=development electron-builder --mac --publish=never",
    "dist:mac:staging": "npm run build:staging && cross-env NODE_ENV=staging electron-builder --mac --publish=never",
    "dist:mac:prod": "npm run build:prod && cross-env NODE_ENV=production electron-builder --mac --x64 --publish=never",
    "dist:mac:prod:arm64": "npm run build:prod && cross-env NODE_ENV=production electron-builder --mac --arm64 --publish=never",
    "dist:win": "npm run build:prod && electron-builder --win --publish=never",
    "dist:win:dev": "npm run build:dev && cross-env NODE_ENV=development electron-builder --win --publish=never",
    "dist:win:staging": "npm run build:staging && cross-env NODE_ENV=staging electron-builder --win --publish=never",
    "dist:win:prod": "npm run build:prod && cross-env NODE_ENV=production electron-builder --win --publish=never",
    "dist:linux": "npm run build:prod && electron-builder --linux --publish=never",
    "dist:linux:dev": "npm run build:dev && cross-env NODE_ENV=development electron-builder --linux --publish=never",
    "dist:linux:staging": "npm run build:staging && cross-env NODE_ENV=staging electron-builder --linux --publish=never",
    "dist:linux:prod": "npm run build:prod && cross-env NODE_ENV=production electron-builder --linux --publish=never",
    "dist:all": "npm run build:prod && electron-builder -mwl --publish=never",
    "dist:all:staging": "npm run build:staging && cross-env NODE_ENV=staging electron-builder -mwl --publish=never",
    "electron:build:mac": "npm run dist:mac",
    "electron:build:win": "npm run dist:win",
    "electron:build:linux": "npm run dist:linux",
    "build:ci": "npm run build:prod && npm run dist:all",
    "build:ci:staging": "npm run build:staging && npm run dist:all:staging",
    "cap:init": "npx cap init",
    "cap:add:android": "npx cap add android",
    "cap:sync": "npm run build:prod && npx cap sync",
    "cap:build:android": "npm run build:prod && npx cap sync && npx cap build android",
    "cap:open:android": "npx cap open android",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "docker-compose restart es-app",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "jest --config jest.backend.config.js",
    "test:frontend": "vitest",
    "test:backend:watch": "jest --config jest.backend.config.js --watch",
    "test:frontend:watch": "vitest --watch",
    "test:backend:coverage": "jest --config jest.backend.config.js --coverage",
    "test:frontend:coverage": "vitest --coverage",
    "test:coverage": "npm run test:backend:coverage && npm run test:frontend:coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^8.10.0",
    "axios": "^1.6.2",
    "chart.js": "^4.4.1",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "element-plus": "^2.4.3",
    "express": "^4.18.2",
    "node-fetch": "^3.3.2",
    "semver": "^7.7.2",
    "vue": "^3.3.11",
    "vue-chartjs": "^5.3.0",
    "vue-i18n": "^9.14.5",
    "vue-router": "^4.2.5"
  },
  "devDependencies": {
    "@capacitor/android": "^6.0.0",
    "@capacitor/cli": "^6.0.0",
    "@capacitor/core": "^6.0.0",
    "@intlify/unplugin-vue-i18n": "^6.0.8",
    "@testing-library/vue": "^8.0.0",
    "@vitejs/plugin-vue": "^5.2.4",
    "@vitest/coverage-v8": "^2.1.9",
    "@vitest/ui": "^2.1.9",
    "@vue/test-utils": "^2.4.3",
    "concurrently": "^9.2.1",
    "cross-env": "^10.0.0",
    "electron": "^37.4.0",
    "electron-builder": "^26.0.12",
    "happy-dom": "^18.0.1",
    "jest": "^29.7.0",
    "playwright": "^1.40.0",
    "sharp": "^0.34.3",
    "supertest": "^6.3.3",
    "svg2png": "^4.1.1",
    "vite": "^5.4.20",
    "vitest": "^2.1.9",
    "wait-on": "^8.0.4"
  },
  "build": {
    "appId": "com.elasticsearch.manager",
    "productName": "ES Manager",
    "directories": {
      "output": "dist-electron"
    },
    "files": [
      "dist/**/*",
      "server/**/*",
      "src-electron/main.js",
      "node_modules/**/*",
      "package.json"
    ],
    "asarUnpack": [
      "server/**/*",
      "dist/**/*",
      "node_modules/**/*"
    ],
    "mac": {
      "category": "public.app-category.developer-tools",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        },
        {
          "target": "zip",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "icon": "assets/icon.icns"
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "assets/icon.ico"
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "assets/icon.png",
      "category": "Development"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true
    }
  }
}
